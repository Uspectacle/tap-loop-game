@property --pulse-phase {
  syntax: "<number>";
  inherits: true;
  initial-value: 0;
}

@keyframes pulse {
  0% {
    --pulse-phase: 0;
  }
  10% {
    --pulse-phase: 1;
  }
  20% {
    --pulse-phase: 0;
  }
  100% {
    --pulse-phase: 0;
  }
}

.grid-wrapper {
  --cell-width: calc(100% / var(--cols));
  --cell-height: calc(100% / var(--rows));
  --ratio: calc(var(--cols) / var(--rows));
  --player: rgb(113, 62, 255);
  --paint: rgb(221, 208, 255);
  --wall: rgba(244, 240, 255, 0.914);
  animation: pulse 7s linear infinite;

  width: 100%;
  flex: 1;

  container-type: size;
  display: flex;
  justify-content: center;
  align-items: center;
  box-sizing: border-box;
  padding: 20px;
}

.grid {
  display: grid;
  grid-template-columns: repeat(var(--cols), 1fr);
  grid-template-rows: repeat(var(--rows), 1fr);

  box-sizing: content-box;
  position: relative;
  border-radius: 4px;

  width: min(100cqw, calc(100cqh * var(--ratio)));
  height: min(100cqh, calc(100cqw / var(--ratio)));
}

.cell {
  aspect-ratio: 1;
  border-radius: 4px;
  width: 80%;
  margin: 10%;
  transition: all 0.5s ease-in-out;
  box-shadow: 0px 0px 0px 2px rgb(206, 206, 206);
  background-color: color-mix(
    in srgb,
    rgba(255, 255, 255, 1) calc(100% - (var(--pulse-phase) * 100%)),
    rgba(255, 234, 234, 0.873) calc(var(--pulse-phase) * 100%)
  );
}

/* === Cell Highlights === */

.cell.top {
  background: radial-gradient(circle at bottom, var(--paint), var(--wall) 40%);
}
.cell.bottom {
  background: radial-gradient(circle at top, var(--paint), var(--wall) 40%);
}
.cell.left {
  background: radial-gradient(circle at right, var(--paint), var(--wall) 40%);
}
.cell.right {
  background: radial-gradient(circle at left, var(--paint), var(--wall) 40%);
}

/* === Player and Start === */
.start,
.player {
  position: absolute;
  width: 20px;
  height: 20px;
  transform: translate(-50%, -50%);
  transform-origin: center;
  transition: transform 0.3s ease-out;
}

.start {
  background-color: var(--player);
  border-radius: 50%;
}

.start.pulse {
  transform: translate(-50%, -50%) scale(calc(0.6 * var(--pulse-phase) + 1));
}

.player {
  background-color: var(--player);
  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
  transition: all 0.3s ease-in-out;
}

.player.top {
  transform: translate(-50%, -50%) rotate(0deg);
}
.player.bottom {
  transform: translate(-50%, -50%) rotate(180deg);
}
.player.left {
  transform: translate(-50%, -50%) rotate(-90deg);
}
.player.right {
  transform: translate(-50%, -50%) rotate(90deg);
}

/* === Path Lines === */

@keyframes drawLine {
  from {
    width: 0;
  }
  to {
  }
}

.path-line {
  position: absolute;
  height: 4px;
  border-radius: 2px;
  background-color: var(--player);
  transform-origin: left center;
  width: calc((100% / var(--cols)) + 1px);
  transition: all 0.3s ease-in-out;
  animation: drawLine 0.3s ease-in-out forwards;
}

.path-line.top {
  transform: translate(0%, -50%) rotate(-90deg);
}
.path-line.bottom {
  transform: translate(0%, -50%) rotate(90deg);
}
.path-line.left {
  transform: translate(0%, -50%) rotate(180deg);
}
.path-line.right {
  transform: translate(0%, -50%) rotate(0deg);
}
